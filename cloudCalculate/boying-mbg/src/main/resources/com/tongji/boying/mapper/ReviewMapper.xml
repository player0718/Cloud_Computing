<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tongji.boying.mapper.ReviewMapper">
  <resultMap id="BaseResultMap" type="com.tongji.boying.model.Review">
    <id column="review_id" jdbcType="INTEGER" property="reviewId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="show_id" jdbcType="INTEGER" property="showId" />
    <result column="star" jdbcType="INTEGER" property="star" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="like_count" jdbcType="INTEGER" property="likeCount" />
    <result column="unlike_count" jdbcType="INTEGER" property="unlikeCount" />
    <result column="report_count" jdbcType="INTEGER" property="reportCount" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="weight" jdbcType="INTEGER" property="weight" />
    <result column="user_delete" jdbcType="BIT" property="userDelete" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.tongji.boying.model.Review">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    review_id, user_id, show_id, star, time, like_count, unlike_count, report_count, 
    parent_id, weight, user_delete
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.tongji.boying.model.ReviewExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from review
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.tongji.boying.model.ReviewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from review
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from review
    where review_id = #{reviewId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from review
    where review_id = #{reviewId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tongji.boying.model.ReviewExample">
    delete from review
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tongji.boying.model.Review">
    insert into review (review_id, user_id, show_id, 
      star, time, like_count, 
      unlike_count, report_count, parent_id, 
      weight, user_delete, content
      )
    values (#{reviewId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{showId,jdbcType=INTEGER}, 
      #{star,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP}, #{likeCount,jdbcType=INTEGER}, 
      #{unlikeCount,jdbcType=INTEGER}, #{reportCount,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER}, 
      #{weight,jdbcType=INTEGER}, #{userDelete,jdbcType=BIT}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.tongji.boying.model.Review">
    insert into review
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="reviewId != null">
        review_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="showId != null">
        show_id,
      </if>
      <if test="star != null">
        star,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="likeCount != null">
        like_count,
      </if>
      <if test="unlikeCount != null">
        unlike_count,
      </if>
      <if test="reportCount != null">
        report_count,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="weight != null">
        weight,
      </if>
      <if test="userDelete != null">
        user_delete,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="reviewId != null">
        #{reviewId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="showId != null">
        #{showId,jdbcType=INTEGER},
      </if>
      <if test="star != null">
        #{star,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="likeCount != null">
        #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="unlikeCount != null">
        #{unlikeCount,jdbcType=INTEGER},
      </if>
      <if test="reportCount != null">
        #{reportCount,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=INTEGER},
      </if>
      <if test="userDelete != null">
        #{userDelete,jdbcType=BIT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tongji.boying.model.ReviewExample" resultType="java.lang.Long">
    select count(*) from review
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update review
    <set>
      <if test="record.reviewId != null">
        review_id = #{record.reviewId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.showId != null">
        show_id = #{record.showId,jdbcType=INTEGER},
      </if>
      <if test="record.star != null">
        star = #{record.star,jdbcType=INTEGER},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.likeCount != null">
        like_count = #{record.likeCount,jdbcType=INTEGER},
      </if>
      <if test="record.unlikeCount != null">
        unlike_count = #{record.unlikeCount,jdbcType=INTEGER},
      </if>
      <if test="record.reportCount != null">
        report_count = #{record.reportCount,jdbcType=INTEGER},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=INTEGER},
      </if>
      <if test="record.weight != null">
        weight = #{record.weight,jdbcType=INTEGER},
      </if>
      <if test="record.userDelete != null">
        user_delete = #{record.userDelete,jdbcType=BIT},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update review
    set review_id = #{record.reviewId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      show_id = #{record.showId,jdbcType=INTEGER},
      star = #{record.star,jdbcType=INTEGER},
      time = #{record.time,jdbcType=TIMESTAMP},
      like_count = #{record.likeCount,jdbcType=INTEGER},
      unlike_count = #{record.unlikeCount,jdbcType=INTEGER},
      report_count = #{record.reportCount,jdbcType=INTEGER},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      weight = #{record.weight,jdbcType=INTEGER},
      user_delete = #{record.userDelete,jdbcType=BIT},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update review
    set review_id = #{record.reviewId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      show_id = #{record.showId,jdbcType=INTEGER},
      star = #{record.star,jdbcType=INTEGER},
      time = #{record.time,jdbcType=TIMESTAMP},
      like_count = #{record.likeCount,jdbcType=INTEGER},
      unlike_count = #{record.unlikeCount,jdbcType=INTEGER},
      report_count = #{record.reportCount,jdbcType=INTEGER},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      weight = #{record.weight,jdbcType=INTEGER},
      user_delete = #{record.userDelete,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tongji.boying.model.Review">
    update review
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="showId != null">
        show_id = #{showId,jdbcType=INTEGER},
      </if>
      <if test="star != null">
        star = #{star,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="likeCount != null">
        like_count = #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="unlikeCount != null">
        unlike_count = #{unlikeCount,jdbcType=INTEGER},
      </if>
      <if test="reportCount != null">
        report_count = #{reportCount,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        weight = #{weight,jdbcType=INTEGER},
      </if>
      <if test="userDelete != null">
        user_delete = #{userDelete,jdbcType=BIT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where review_id = #{reviewId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.tongji.boying.model.Review">
    update review
    set user_id = #{userId,jdbcType=INTEGER},
      show_id = #{showId,jdbcType=INTEGER},
      star = #{star,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP},
      like_count = #{likeCount,jdbcType=INTEGER},
      unlike_count = #{unlikeCount,jdbcType=INTEGER},
      report_count = #{reportCount,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=INTEGER},
      weight = #{weight,jdbcType=INTEGER},
      user_delete = #{userDelete,jdbcType=BIT},
      content = #{content,jdbcType=LONGVARCHAR}
    where review_id = #{reviewId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tongji.boying.model.Review">
    update review
    set user_id = #{userId,jdbcType=INTEGER},
      show_id = #{showId,jdbcType=INTEGER},
      star = #{star,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP},
      like_count = #{likeCount,jdbcType=INTEGER},
      unlike_count = #{unlikeCount,jdbcType=INTEGER},
      report_count = #{reportCount,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=INTEGER},
      weight = #{weight,jdbcType=INTEGER},
      user_delete = #{userDelete,jdbcType=BIT}
    where review_id = #{reviewId,jdbcType=INTEGER}
  </update>
</mapper>